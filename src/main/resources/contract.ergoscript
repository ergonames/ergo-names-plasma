{
    val selfOut = OUTPUTS(0)

    val inTree = selfOut.R4[AvlTree].get
    val outTree = selfOut.R5[AvlTree].get
    val key = selfOut.R6[Coll[Byte]].get
    val value = selfOut.R7[Coll[Byte]].get
    val proof = selfOut.R8[Coll[Byte]].get

    val newTree = inTree.insert(Coll((key, value)), proof).get
    val validSpend = SELF.propositionBytes == selfOut.propositionBytes && outTree == newTree

    sigmaProp(validSpend)
}